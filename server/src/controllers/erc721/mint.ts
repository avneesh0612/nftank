import { Request, Response } from "express";
import { ThirdwebSDK } from "@thirdweb-dev/sdk";
import { ethers } from "ethers";
import dotenv from "dotenv";

import { erc721Contracts } from "../../utils/contracts";
import { supportedNetworks } from "../../utils/networks";
import verifyAddress from "../../utils/verifyAddress";

import {
  contractAddress,
  alchemyApiKeys,
  ethersSupportedNetworkNames,
} from "../../constants/constants";

import type { Erc721RequestBody } from "../../types/erc721/index";

export default async function handler(req: Request, res: Response) {
  dotenv.config();

  try {
    const { address, network, image, name, description }: Erc721RequestBody =
      req.body;

    if (!address || !network) {
      return res
        .status(400)
        .json({ message: "Address and Network are required fields" });
    }

    if (!supportedNetworks.get(network)) {
      return res
        .status(400)
        .json({ message: "Invalid or unsupported network!" });
    }

    if (!verifyAddress(address)) {
      return res.status(400).json({ message: "Invalid address" });
    }

    const sdk = new ThirdwebSDK(
      new ethers.Wallet(
        process.env.WALLET_PRIVATE_KEY as string,
        new ethers.providers.AlchemyProvider(
          ethersSupportedNetworkNames.get(network),
          alchemyApiKeys.get(network)
        )
      )
    );

    const nftCollection = sdk.getNFTCollection(erc721Contracts.get(network)!);

    const metadata = {
      name: name || "NFTank Test NFT",
      description:
        description ||
        "üñº This NFT is generated by NFTank which helps you get NFTs on testnet quickly for testing purposes.",
      image: image || "https://imgur.com/GurpXb4.png",
    };

    const tx = await nftCollection.mintTo(address, metadata);
    const tokenId = tx.id.toString();
    const tokenAddress = contractAddress.get(`${network}-erc721`);

    return res.json({
      message: "NFT minted successfully",
      tokenAddress,
      tokenId,
      openseaLink: `https://testnets.opensea.io/assets/${network}/${tokenAddress}/${tokenId}`,
    });
  } catch (err) {
    console.error("[‚ö†Ô∏è] Error in ERC721 mint", err);
    return res.status(500).json({ message: "Internal server error" });
  }
}
